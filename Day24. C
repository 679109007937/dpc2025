#include <stdio.h>
#include <stdlib.h>

struct Node {
    int val;
    struct Node* left;
    struct Node* right;
};

struct Node* newNode(int val) {
    struct Node* node = (struct Node*)malloc(sizeof(struct Node));
    node->val = val;
    node->left = NULL;
    node->right = NULL;
    return node;
}

struct Node* LCA(struct Node* root, struct Node* p, struct Node* q) {
    if (root == NULL) return NULL;
    if (root == p || root == q) return root;
    struct Node* left = LCA(root->left, p, q);
    struct Node* right = LCA(root->right, p, q);
    if (left && right) return root;
    return (left != NULL) ? left : right;
}

int main() {
    struct Node* root = newNode(3);
    root->left = newNode(5);
    root->right = newNode(1);
    root->left->left = newNode(6);
    root->left->right = newNode(2);
    root->right->left = newNode(0);
    root->right->right = newNode(8);
    root->left->right->left = newNode(7);
    root->left->right->right = newNode(4);

    struct Node* p = root->left;  
    struct Node* q = root->right; 

    struct Node* ans = LCA(root, p, q);
    printf("%d\n", ans->val);
    return 0;
}
